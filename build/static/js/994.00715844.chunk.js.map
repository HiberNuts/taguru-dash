{"version":3,"file":"static/js/994.00715844.chunk.js","mappings":"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","sources":["views/display/Display.js"],"sourcesContent":["import { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AtSign,\r\n  Calendar,\r\n  GitHub,\r\n  Linkedin,\r\n  MapPin,\r\n  Paperclip,\r\n} from \"react-feather\";\r\nimport { contractabi, contractadd } from \"../ConnectWallet/contractinfo\";\r\nimport styles from \"./Display.module.css\";\r\nimport { useContextAPI } from \"index\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Image } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\n// asd\r\nfunction timeConverter(UNIX_timestamp) {\r\n  var a = new Date(UNIX_timestamp * 1000);\r\n  var months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  var year = a.getFullYear();\r\n  var month = months[a.getMonth()];\r\n  var date = a.getDate();\r\n  var hour = a.getHours();\r\n  var min = a.getMinutes();\r\n  var sec = a.getSeconds();\r\n  var timeshow = date + \" \" + month + \" \" + year;\r\n\r\n  const monthplus = a.getMonth() + 1;\r\n  const getCorrectMonth = monthplus <= 9 ? \"0\" + monthplus : monthplus;\r\n  const correctDate = date <= 9 ? \"0\" + date : date;\r\n  const correctHour = hour <= 9 ? \"0\" + hour : hour;\r\n  const correctMint = min <= 9 ? \"0\" + min : min;\r\n  var timeforinput =\r\n    year +\r\n    \"-\" +\r\n    getCorrectMonth +\r\n    \"-\" +\r\n    correctDate +\r\n    \"T\" +\r\n    correctHour +\r\n    \":\" +\r\n    correctMint;\r\n  return { timeshow, timeforinput };\r\n  // 2018-06-12T19:30\r\n}\r\n\r\nconst Display = () => {\r\n  const { active, account, library } = useWeb3React();\r\n  const { LoggedInUser, setLoggedInUser } = useContextAPI();\r\n  console.log({ LoggedInUser });\r\n  const [UserData, setUserData] = useState(\"\");\r\n  const [userCV, setUserCV] = useState(\"\");\r\n\r\n  console.log({ userCV });\r\n  const [DataMessage, setDataMessage] = useState({\r\n    exists: false,\r\n    message: \"Loading\",\r\n  });\r\n\r\n  const GetDisplayData = async () => {\r\n    const signer = await library?.getSigner(account);\r\n    const cont = await new ethers.Contract(contractadd, contractabi, signer);\r\n\r\n    const displayCvContract = await cont.displayCv();\r\n    const getCandCvs = await cont.getCandCvs();\r\n\r\n    console.log({ displayCvContract });\r\n    console.log({ getCandCvs });\r\n\r\n    await axios\r\n      .get(displayCvContract)\r\n      .then((res) => {\r\n        console.log(\">>>>>>>>>>>>>>>>>>>>>>>\", { res });\r\n        setUserCV(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return;\r\n\r\n    // console.log({ displayCv });\r\n    // console.log({ getCandCvs });\r\n\r\n    // const checkpersdetAddress = displayCv[0][1];\r\n\r\n    // if (checkpersdetAddress == account) {\r\n    //   const PersDetails = {\r\n    //     persdetName: displayCv[0][0],\r\n    //     persdetAddress: displayCv[0][1],\r\n    //     persdetEmail: displayCv[0][2],\r\n    //     persdetPhone: displayCv[0][3],\r\n    //     personalStatement: displayCv[0][4],\r\n    //     OtherkeysSkills: displayCv[0][5],\r\n    //     hobbies: displayCv[0][6],\r\n    //     summary: displayCv[0][7],\r\n    //   };\r\n\r\n    //   const Empstartdata = timeConverter(displayCv[1][3]?.toString()).timeshow;\r\n    //   const Empenddate = timeConverter(displayCv[1][3]?.toString()).timeshow;\r\n\r\n    //   const Employement = {\r\n    //     jobTitle: displayCv[1][0],\r\n    //     companyName: displayCv[1][1],\r\n    //     companyLocation: displayCv[1][2],\r\n    //     companystartDate: Empstartdata,\r\n    //     companyendDate: Empenddate,\r\n    //     achvResp: displayCv[1][5],\r\n    //   };\r\n\r\n    //   const Edustartdata = timeConverter(displayCv[2][1]?.toString()).timeshow;\r\n    //   const Eduenddate = timeConverter(displayCv[2][2]?.toString()).timeshow;\r\n\r\n    //   const Education = {\r\n    //     SchoolorcollegeName: displayCv[2][0],\r\n    //     SchoolorcollegestartDate: Edustartdata,\r\n    //     SchoolorcollegeEndDate: Eduenddate,\r\n    //     SchoolorcollegeDesc: displayCv[2][3],\r\n    //   };\r\n\r\n    //   const persdetPhone = \"\";\r\n    //   console.log({ PersDetails, Employement, Education });\r\n\r\n    //   setUserData({ PersDetails, Employement, Education });\r\n    //   setDataMessage({ exists: true, message: \"Data Exists\" });\r\n    // } else {\r\n    //   setDataMessage({ exists: false, message: \"Data does not Exist\" });\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active && account) {\r\n      GetDisplayData();\r\n    } else {\r\n      setDataMessage({ exists: false, message: \"Connect your wallet\" });\r\n    }\r\n  }, []);\r\n\r\n  const [Loading, setLoading] = useState(false);\r\n \r\n  const [condidatesCVS, setCondidatesCVS] = useState([]);\r\n\r\n  const strings = [1, 2, 3, 4, 5, 6, 7, 8, 9, 20];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const CVsPerPage = 4;\r\n\r\n  const totalPages = Math.ceil(condidatesCVS.length / CVsPerPage);\r\n\r\n  const currentPageData = condidatesCVS.slice(\r\n    (currentPage - 1) * CVsPerPage,\r\n    currentPage * CVsPerPage\r\n  );\r\n\r\n  //   console.log(condidatesCVS && condidatesCVS[0]);\r\n  const call = async () => {\r\n    if (active && account && LoggedInUser.email && !LoggedInUser.isCand) {\r\n      console.log(\"admin\");\r\n      const signer = await library?.getSigner(account);\r\n      const cont = await new ethers.Contract(\r\n        contractadd,\r\n        contractabi,\r\n        signer\r\n      );\r\n      const res = await cont.getCandCvs();\r\n      console.log({ res });\r\n  \r\n      let imgsarr = [];\r\n      for (const item of res) {\r\n        console.log({ item });\r\n        const ressss = await axios.get(item);\r\n        console.log(ressss.data);\r\n        imgsarr.push(ressss?.data);\r\n      }\r\n      console.log({ imgsarr });\r\n      setCondidatesCVS(imgsarr);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    call();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (active && account) {\r\n      GetDisplayData();\r\n    } else {\r\n      setDataMessage({ exists: false, message: \"Connect your wallet\" });\r\n    }\r\n  }, [account]);\r\n\r\n  console.log({ userCV });\r\n\r\n  return (\r\n    <div>\r\n      {/* {LoggedInUser.email && LoggedInUser.isCand ? \"cad\" :  \"admin\"} */}\r\n      {active && LoggedInUser.email && LoggedInUser.isCand && (\r\n        <>\r\n        cand <br />\r\n          <img style={{ margin: \"10px\" }} width={500} src={userCV} alt=\"Create your CV\" />\r\n          {/* {!DataMessage.exists && DataMessage.message} */}\r\n          {/* {DataMessage.exists && (\r\n            <div>\r\n              <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                  <p className={styles.heading}>\r\n                    {UserData?.PersDetails?.persdetName}\r\n                  </p>\r\n                  <p className={styles.subHeading}>\r\n                    {UserData?.PersDetails?.persdetAddress}\r\n                  </p>\r\n                  <p className={`text-dark`}>\r\n                    {UserData?.PersDetails?.personalStatement}\r\n                  </p>\r\n                  <div className={styles.links}>\r\n                    <a\r\n                      className={styles.link}\r\n                      href={`mailto:${UserData?.PersDetails?.persdetEmail}`}>\r\n                      <AtSign /> {UserData?.PersDetails?.persdetEmail}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.main}>\r\n                  <div className={styles.col1}>\r\n                    <div\r\n                      key={\"workexp\"}\r\n                      draggable\r\n                      className={`${styles.section}`}>\r\n                      <div className={styles.sectionTitle}>Work Experience</div>\r\n                      <div className={styles.content}>\r\n                        <div className={`mt-3 ${styles.item}`}>\r\n                          <p className={`p-0 m-0 ${styles.title}`}>\r\n                            {UserData?.Employement?.jobTitle}\r\n                          </p>\r\n                          <p className={`p-0 m-0 ${styles.subTitle}`}>\r\n                            {UserData?.Employement?.companyName}\r\n                          </p>\r\n                          <p className={`p-0 m-0`}>\r\n                            {UserData?.Employement?.companyLocation}\r\n                          </p>\r\n                          <i className=\"border-bottom\">\r\n                            Achievements and Responsibilities:\r\n                          </i>\r\n                          <div className={`p-0 m-0 ${styles.content}`}>\r\n                            <p className={styles.overview}>\r\n                              {UserData?.Employement?.achvResp}\r\n                            </p>\r\n                          </div>\r\n                          <div className={styles.date}>\r\n                            <Calendar />{\" \"}\r\n                            {UserData?.Employement?.companystartDate}-\r\n                            {UserData?.Employement?.companyendDate}\r\n                          </div>\r\n                          <p className={styles.date}>\r\n                            <MapPin /> Remote\r\n                          </p>\r\n                        </div>\r\n                        <div\r\n                          key={\"education\"}\r\n                          draggable\r\n                          className={`${styles.section} `}>\r\n                          <div className={styles.sectionTitle}>Education</div>\r\n                          <div className={styles.content}>\r\n                            <div className={`p-0 mt-2 ${styles.item}`}>\r\n                              <p className={`p-0 m-0 ${styles.title}`}>\r\n                                {UserData?.Education?.SchoolorcollegeDesc}\r\n                              </p>\r\n                              <p className={`p-0 m-0 ${styles.subTitle}`}>\r\n                                {UserData?.Education?.SchoolorcollegeName}\r\n                              </p>\r\n                              <div className={styles.date}>\r\n                                <Calendar />{\" \"}\r\n                                {UserData?.Education?.SchoolorcollegestartDate}-\r\n                                {UserData?.Education?.SchoolorcollegeEndDate}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.col2}>\r\n\r\n                    <div\r\n                      key={\"summary\"}\r\n                      draggable\r\n                      className={`${styles.section} `}>\r\n                      <div className={styles.sectionTitle}>Summary</div>\r\n                      <div className={styles.content}>\r\n                        <p className={styles.overview}>\r\n                          {UserData.PersDetails.summary}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      key={\"other\"}\r\n                      draggable\r\n                      className={`${styles.section}`}>\r\n                      <div className={styles.sectionTitle}>Others</div>\r\n                      <div className={styles.content}>\r\n                        <p className={styles.overview}>\r\n                          <h5\r\n                            className=\"m-0 p-0 fw-bold\"\r\n                            style={{ fontSize: \"15px\" }}>\r\n                            Hobbies\r\n                          </h5>\r\n                          <p className=\"p-0 m-0\">\r\n                            {UserData.PersDetails.hobbies}\r\n                          </p>\r\n                        </p>\r\n                        <p className={styles.overview}>\r\n                          <h5\r\n                            className=\"m-0 p-0 fw-bold\"\r\n                            style={{ fontSize: \"15px\" }}>\r\n                            Other Skills\r\n                          </h5>\r\n                          <p className=\"p-0 m-0\">\r\n                            {UserData.PersDetails.OtherkeysSkills}\r\n                          </p>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} */}\r\n        </>\r\n      )}\r\n      {active && LoggedInUser.email && !LoggedInUser.isCand && (\r\n        <>\r\n        admin\r\n          <div>\r\n            <button\r\n              disabled={currentPage === 1}\r\n              onClick={() => setCurrentPage(currentPage - 1)}>\r\n              Previous\r\n            </button>\r\n            <button\r\n              disabled={currentPage === totalPages}\r\n              onClick={() => setCurrentPage(currentPage + 1)}>\r\n              Next\r\n            </button>\r\n          </div>\r\n\r\n          {condidatesCVS && currentPageData.map((string) => (\r\n              <>\r\n                  <TransitionsModal\r\n                    imgLink={string}\r\n                  />\r\n              </>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"40%\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction TransitionsModal({ imgLink }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <span onClick={handleOpen} style={{ cursor: \"pointer\" }}>\r\n        <img style={{ margin: \"10px\" }} width={300} src={imgLink} alt=\"\" />\r\n      </span>\r\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        slots={{ backdrop: Backdrop }}\r\n        slotProps={{\r\n          backdrop: {\r\n            timeout: 500,\r\n          },\r\n        }}>\r\n        <Fade in={open}>\r\n          <Box sx={style}>\r\n            {/* <IconButton\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n              }}\r\n              onClick={handleClose}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                class=\"icon icon-tabler icon-tabler-minimize\"\r\n                width=\"44\"\r\n                height=\"44\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke-width=\"1.5\"\r\n                stroke=\"#2c3e50\"\r\n                fill=\"none\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\">\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M15 19v-2a2 2 0 0 1 2 -2h2\" />\r\n                <path d=\"M15 5v2a2 2 0 0 0 2 2h2\" />\r\n                <path d=\"M5 15h2a2 2 0 0 1 2 2v2\" />\r\n                <path d=\"M5 9h2a2 2 0 0 0 2 -2v-2\" />\r\n              </svg>\r\n            </IconButton> */}\r\n            <div style={{ height: \"80vh\", overflow: \"auto\" }}>\r\n              <img src={imgLink} alt=\"\" width=\"100%\" />\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"],"names":["active","account","library","useWeb3React","LoggedInUser","setLoggedInUser","useContextAPI","console","log","UserData","setUserData","useState","userCV","setUserCV","DataMessage","setDataMessage","exists","message","GetDisplayData","async","signer","getSigner","cont","ethers","contractadd","contractabi","displayCvContract","displayCv","getCandCvs","axios","then","res","data","catch","err","useEffect","Loading","setLoading","condidatesCVS","setCondidatesCVS","currentPage","setCurrentPage","totalPages","Math","ceil","length","currentPageData","slice","email","isCand","imgsarr","item","ressss","push","call","style","margin","width","src","alt","disabled","onClick","map","string","TransitionsModal","imgLink","position","top","left","transform","bgcolor","border","boxShadow","p","open","setOpen","React","cursor","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","Box","sx","height","overflow"],"sourceRoot":""}