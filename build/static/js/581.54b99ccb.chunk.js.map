{"version":3,"file":"static/js/581.54b99ccb.chunk.js","mappings":"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","sources":["webpack://berry-material-react-free/./src/views/InputControl/InputControl.module.css?c26f","views/InputControl/InputControl.js","webpack://berry-material-react-free/./src/views/LiveDisplay/LiveDisplay.module.css?9830","views/LiveDisplay/LiveDisplay.jsx","webpack://berry-material-react-free/./src/views/create/Create.module.css?25e3","views/Resume/Resume.js","views/create/chatBot/ques.js","views/create/chatBot/ChatBot.js","views/create/Create.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputControl_container__irnaO\"};","import React from 'react';\r\n\r\nimport styles from './InputControl.module.css';\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nfunction InputControl({ label, ...props }) {\r\n    return (\r\n        <div className={styles.container}>\r\n            {label && <label>{label}</label>}\r\n            <input type=\"text\" {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputControl;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LiveDisplay_container__N3ST5\",\"header\":\"LiveDisplay_header__B2B6m\",\"heading\":\"LiveDisplay_heading__Sg3MZ\",\"subHeading\":\"LiveDisplay_subHeading__g2ZAd\",\"links\":\"LiveDisplay_links__8dpOX\",\"link\":\"LiveDisplay_link__gku8Y\",\"main\":\"LiveDisplay_main__tdsd1\",\"col1\":\"LiveDisplay_col1__JQyls\",\"col2\":\"LiveDisplay_col2__0O91N\",\"section\":\"LiveDisplay_section__vSyfz\",\"sectionTitle\":\"LiveDisplay_sectionTitle__+kYhF\",\"content\":\"LiveDisplay_content__jSaof\",\"item\":\"LiveDisplay_item__jYWck\",\"title\":\"LiveDisplay_title__j7eL+\",\"subTitle\":\"LiveDisplay_subTitle__ucvd4\",\"overview\":\"LiveDisplay_overview__-BuKx\",\"date\":\"LiveDisplay_date__EfrCK\",\"points\":\"LiveDisplay_points__YMdlw\",\"numbered\":\"LiveDisplay_numbered__rXj5W\",\"hidden\":\"LiveDisplay_hidden__GPn2p\"};","import { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AtSign, Calendar, GitHub, Linkedin, MapPin, Paperclip } from \"react-feather\";\r\nimport { contractabi, contractadd } from \"../ConnectWallet/contractinfo\";\r\nimport styles from \"./LiveDisplay.module.css\";\r\n\r\nfunction timeConverter(UNIX_timestamp) {\r\n  var a = new Date(UNIX_timestamp * 1000);\r\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  var year = a.getFullYear();\r\n  var month = months[a.getMonth()];\r\n  var date = a.getDate();\r\n  var hour = a.getHours();\r\n  var min = a.getMinutes();\r\n  var sec = a.getSeconds();\r\n  var timeshow = date + \" \" + month + \" \" + year;\r\n\r\n  const monthplus = a.getMonth() + 1;\r\n  const getCorrectMonth = monthplus <= 9 ? \"0\" + monthplus : monthplus;\r\n  const correctDate = date <= 9 ? \"0\" + date : date;\r\n  const correctHour = hour <= 9 ? \"0\" + hour : hour;\r\n  const correctMint = min <= 9 ? \"0\" + min : min;\r\n  var timeforinput = year + \"-\" + getCorrectMonth + \"-\" + correctDate + \"T\" + correctHour + \":\" + correctMint;\r\n  return { timeshow, timeforinput };\r\n  // 2018-06-12T19:30\r\n}\r\n\r\nconst LiveDisplay = ({ values, ref }) => {\r\n  const { active, account, library } = useWeb3React();\r\n\r\n  const [UserData, setUserData] = useState(\"\");\r\n  const [DataMessage, setDataMessage] = useState({\r\n    exists: false,\r\n    message: \"Loading\",\r\n  });\r\n\r\n  const GetDisplayData = async () => {\r\n    const signer = await library?.getSigner(account);\r\n    const cont = await new ethers.Contract(contractadd, contractabi, signer);\r\n\r\n    const displayCv = await cont.displayCv();\r\n    console.log({ displayCv });\r\n\r\n    const checkpersdetAddress = displayCv[0][1];\r\n\r\n    if (checkpersdetAddress == account) {\r\n      const PersDetails = {\r\n        persdetName: displayCv[0][0]?.toString(),\r\n        persdetAddress: displayCv[0][1]?.toString(),\r\n        persdetEmail: displayCv[0][2]?.toString(),\r\n        persdetPhone: displayCv[0][3]?.toString(),\r\n        personalStatement: displayCv[0][4]?.toString(),\r\n        OtherkeysSkills: displayCv[0][5]?.toString(),\r\n        hobbies: displayCv[0][6]?.toString(),\r\n        summary: displayCv[0][7]?.toString(),\r\n      };\r\n\r\n      const Empstartdata = timeConverter(displayCv[1][3]?.toString()).timeshow;\r\n      const Empenddate = timeConverter(displayCv[1][3]?.toString()).timeshow;\r\n\r\n      const Employement = {\r\n        jobTitle: displayCv[1][0]?.toString(),\r\n        companyName: displayCv[1][1]?.toString(),\r\n        companyLocation: displayCv[1][2]?.toString(),\r\n        companystartDate: Empstartdata?.toString(),\r\n        companyendDate: Empenddate?.toString(),\r\n        achvResp: displayCv[1][5]?.toString(),\r\n      };\r\n\r\n      const Edustartdata = timeConverter(displayCv[2][1]?.toString()).timeshow;\r\n      const Eduenddate = timeConverter(displayCv[2][2]?.toString()).timeshow;\r\n\r\n      const Education = {\r\n        SchoolorcollegeName: displayCv[2][0]?.toString(),\r\n        SchoolorcollegestartDate: Edustartdata?.toString(),\r\n        SchoolorcollegeEndDate: Eduenddate?.toString(),\r\n        SchoolorcollegeDesc: displayCv[2][3]?.toString(),\r\n      };\r\n\r\n      const persdetPhone = \"\";\r\n      console.log({ PersDetails, Employement, Education });\r\n\r\n      setUserData({ PersDetails, Employement, Education });\r\n      setDataMessage({ exists: true, message: \"Data Exists\" });\r\n    } else {\r\n      setDataMessage({ exists: false, message: \"Data does not Exist\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active && account) {\r\n      GetDisplayData();\r\n    } else {\r\n      setDataMessage({ exists: false, message: \"Connect your wallet\" });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (active && account) {\r\n      GetDisplayData();\r\n    } else {\r\n      setDataMessage({ exists: false, message: \"Connect your wallet\" });\r\n    }\r\n  }, [account]);\r\n\r\n  return (\r\n    <div >\r\n      <div>\r\n        <div id=\"livepreview\" className={styles.container}>\r\n          <div className={styles.header}>\r\n            <p className={styles.heading}>{values?.persdetName}</p>\r\n            <p className={styles.subHeading}>{account}</p>\r\n            <p className={`text-dark`}>{values?.personalStatement}</p>\r\n            <div className={styles.links}>\r\n              <a className={styles.link} href={`mailto:${values?.persdetEmail}`}>\r\n                <AtSign /> {values?.persdetEmail}\r\n              </a>\r\n              <a className={styles.link} href={`tel:${values?.persdetPhone}`}>{values?.persdetPhone}</a>\r\n              {/* <a className={styles.link}>\r\n                <GitHub /> asdasd\r\n              </a> */}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.main}>\r\n            <div className={styles.col1}>\r\n              <div key={\"workexp\"} draggable className={`${styles.section}`}>\r\n                <div className={styles.sectionTitle}>Work Experience</div>\r\n                <div className={styles.content}>\r\n                  <div className={`mt-3 ${styles.item}`}>\r\n                    <p className={`p-0 m-0 ${styles.title}`}>{values?.jobTitle}</p>\r\n                    <p className={`p-0 m-0 ${styles.subTitle}`}>{values?.companyName}</p>\r\n                    <p className={`p-0 m-0`}>location: {values?.companyLocation}</p>\r\n                    <i className=\"border-bottom\">Achievements and Responsibilities:</i>\r\n                    <div className={`p-0 m-0 ${styles.content}`}>\r\n                      <p className={styles.overview}>{values?.achvResp}</p>\r\n                    </div>\r\n                    {/* <a className={styles.link} href=\"\">\r\n                  <Paperclip />\r\n                  certificate link\r\n                </a> */}\r\n                    <div className={styles.date}>\r\n                      <Calendar /> {values?.companystartDate}-{values?.companyendDate}\r\n                    </div>\r\n                    <p className={styles.date}>\r\n                      <MapPin /> Remote\r\n                    </p>\r\n                    {/* <ul className={styles.points}>\r\n                    <li className={styles.point}>\r\n                      asdasd\r\n                    </li>\r\n                    <li className={styles.point}>\r\n                      asdasd\r\n                    </li>\r\n                </ul> */}\r\n                  </div>\r\n                  <div key={\"education\"} draggable className={`${styles.section} `}>\r\n                    <div className={styles.sectionTitle}>Education</div>\r\n                    <div className={styles.content}>\r\n                      <div className={`p-0 mt-2 ${styles.item}`}>\r\n                        <p className={`p-0 m-0 ${styles.title}`}>{values?.SchoolorcollegeDesc}</p>\r\n                        <p className={`p-0 m-0 ${styles.subTitle}`}>{values?.SchoolorcollegeName}</p>\r\n                        <div className={styles.date}>\r\n                          <Calendar /> {values?.SchoolorcollegestartDate}-{values?.SchoolorcollegeEndDate}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.col2}>\r\n              {/* <div\r\n                  key={\"achievement\"}\r\n                  draggable\r\n                  className={`${styles.section} `}>\r\n                  <div className={styles.sectionTitle}>achievement</div>\r\n                  <div className={styles.content}>\r\n                    <ul className={styles.numbered}>\r\n                      <li className={styles.point}>asdsd</li>\r\n                      <li className={styles.point}>asdsd</li>\r\n                    </ul>\r\n                  </div>\r\n                </div> */}\r\n\r\n              <div key={\"summary\"} draggable className={`${styles.section} `}>\r\n                <div className={styles.sectionTitle}>Summary</div>\r\n                <div className={styles.content}>\r\n                  <p className={styles.overview}>{values?.summary}</p>\r\n                </div>\r\n              </div>\r\n              <div key={\"other\"} draggable className={`${styles.section}`}>\r\n                <div className={styles.sectionTitle}>Others</div>\r\n                <div className={styles.content}>\r\n                  <p className={styles.overview}>\r\n                    <h5 className=\"m-0 p-0 fw-bold\" style={{ fontSize: \"15px\" }}>\r\n                      Hobbies\r\n                    </h5>\r\n                    <p className=\"p-0 m-0\">{values?.hobbies}</p>\r\n                  </p>\r\n                  <p className={styles.overview}>\r\n                    <h5 className=\"m-0 p-0 fw-bold\" style={{ fontSize: \"15px\" }}>\r\n                      Other Skills\r\n                    </h5>\r\n                    <p className=\"p-0 m-0\">{values?.OtherkeysSkills}</p>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveDisplay;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Create_container__asZ4d\",\"header\":\"Create_header__ibLCs\",\"section\":\"Create_section__iE9zS\",\"active\":\"Create_active__quxkr\",\"body\":\"Create_body__ypSmG\",\"detail\":\"Create_detail__j0hCC\",\"row\":\"Create_row__ZBFm4\",\"column\":\"Create_column__dRTqb\",\"chips\":\"Create_chips__VldLj\",\"new\":\"Create_new__zSocF\",\"chip\":\"Create_chip__k7zzv\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { AtSign, Calendar, GitHub, Linkedin, MapPin, Paperclip, Phone } from 'react-feather';\r\n\r\nimport styles from './Resume.module.css';\r\n\r\nconst Resume = forwardRef((props, ref) => {\r\n    console.log({ props });\r\n    console.log({ ref });\r\n    const information = props.information;\r\n    const sections = props.sections;\r\n    const containerRef = useRef();\r\n\r\n    const [columns, setColumns] = useState([[], []]);\r\n    const [source, setSource] = useState('');\r\n    const [target, seTarget] = useState('');\r\n\r\n    const info = {\r\n        workExp: information[sections.workExp],\r\n        // project: information[sections.project],\r\n        achievement: information[sections.achievement],\r\n        education: information[sections.education],\r\n        basicInfo: information[sections.basicInfo],\r\n        summary: information[sections.summary],\r\n        other: information[sections.other]\r\n    };\r\n\r\n    const getFormattedDate = (value) => {\r\n        if (!value) return '';\r\n        const date = new Date(value);\r\n\r\n        return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    };\r\n\r\n    const sectionDiv = {\r\n        [sections.workExp]: (\r\n            <div\r\n                key={'workexp'}\r\n                draggable\r\n                onDragOver={() => seTarget(info.workExp?.id)}\r\n                onDragEnd={() => setSource(info.workExp?.id)}\r\n                className={`${styles.section} ${info.workExp?.sectionTitle ? '' : styles.hidden}`}\r\n            >\r\n                <div className={styles.sectionTitle}>{info.workExp.sectionTitle}</div>\r\n                <div className={styles.content}>\r\n                    {info.workExp?.details?.map((item) => (\r\n                        <div className={styles.item} key={item.title}>\r\n                            {item.title ? <p className={styles.title}>{item.title}</p> : <span />}\r\n                            {item.companyName ? <p className={styles.subTitle}>{item.companyName}</p> : <span />}\r\n                            {item.certificationLink ? (\r\n                                <a className={styles.link} href={item.certificationLink}>\r\n                                    <Paperclip />\r\n                                    {item.certificationLink}\r\n                                </a>\r\n                            ) : (\r\n                                <span />\r\n                            )}\r\n                            {item.startDate && item.endDate ? (\r\n                                <div className={styles.date}>\r\n                                    <Calendar /> {getFormattedDate(item.startDate)}-{getFormattedDate(item.endDate)}\r\n                                </div>\r\n                            ) : (\r\n                                <div />\r\n                            )}\r\n                            {item.location ? (\r\n                                <p className={styles.date}>\r\n                                    <MapPin /> Remote\r\n                                </p>\r\n                            ) : (\r\n                                <span />\r\n                            )}\r\n                            {item.points?.length > 0 ? (\r\n                                <ul className={styles.points}>\r\n                                    {item.points?.map((elem, index) => (\r\n                                        <li className={styles.point} key={elem + index}>\r\n                                            {elem}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <span />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        ),\r\n        // [sections.project]: (\r\n        //   <div\r\n        //     key={\"project\"}\r\n        //     draggable\r\n        //     onDragOver={() => seTarget(info.project?.id)}\r\n        //     onDragEnd={() => setSource(info.project?.id)}\r\n        //     className={`${styles.section} ${\r\n        //       info.project?.sectionTitle ? \"\" : styles.hidden\r\n        //     }`}\r\n        //   >\r\n        //     <div className={styles.sectionTitle}>{info.project.sectionTitle}</div>\r\n        //     <div className={styles.content}>\r\n        //       {info.project?.details?.map((item) => (\r\n        //         <div className={styles.item}>\r\n        //           {item.title ? (\r\n        //             <p className={styles.title}>{item.title}</p>\r\n        //           ) : (\r\n        //             <span />\r\n        //           )}\r\n        //           {item.link ? (\r\n        //             <a className={styles.link} href={item.link}>\r\n        //               <Paperclip />\r\n        //               {item.link}\r\n        //             </a>\r\n        //           ) : (\r\n        //             <span />\r\n        //           )}\r\n        //           {item.github ? (\r\n        //             <a className={styles.link} href={item.github}>\r\n        //               <GitHub />\r\n        //               {item.github}\r\n        //             </a>\r\n        //           ) : (\r\n        //             <span />\r\n        //           )}\r\n        //           {item.overview ? (\r\n        //             <p className={styles.overview}>{item.overview} </p>\r\n        //           ) : (\r\n        //             <span />\r\n        //           )}\r\n        //           {item.points?.length > 0 ? (\r\n        //             <ul className={styles.points}>\r\n        //               {item.points?.map((elem, index) => (\r\n        //                 <li className={styles.point} key={elem + index}>\r\n        //                   {elem}\r\n        //                 </li>\r\n        //               ))}\r\n        //             </ul>\r\n        //           ) : (\r\n        //             <span />\r\n        //           )}\r\n        //         </div>\r\n        //       ))}\r\n        //     </div>\r\n        //   </div>\r\n        // ),\r\n        [sections.education]: (\r\n            <div\r\n                key={'education'}\r\n                draggable\r\n                onDragOver={() => seTarget(info.education?.id)}\r\n                onDragEnd={() => setSource(info.education?.id)}\r\n                className={`${styles.section} ${info.education?.sectionTitle ? '' : styles.hidden}`}\r\n            >\r\n                <div className={styles.sectionTitle}>{info.education?.sectionTitle}</div>\r\n                <div className={styles.content}>\r\n                    {info.education?.details?.map((item) => (\r\n                        <div className={styles.item}>\r\n                            {item.title ? <p className={styles.title}>{item.title}</p> : <span />}\r\n                            {item.college ? <p className={styles.subTitle}>Some college name</p> : <span />}\r\n                            {item.startDate && item.endDate ? (\r\n                                <div className={styles.date}>\r\n                                    <Calendar /> {getFormattedDate(item.startDate)} -{getFormattedDate(item.endDate)}\r\n                                </div>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        ),\r\n        [sections.achievement]: (\r\n            <div\r\n                key={'achievement'}\r\n                draggable\r\n                onDragOver={() => seTarget(info.achievement?.id)}\r\n                onDragEnd={() => setSource(info.achievement?.id)}\r\n                className={`${styles.section} ${info.achievement?.sectionTitle ? '' : styles.hidden}`}\r\n            >\r\n                <div className={styles.sectionTitle}>{info.achievement?.sectionTitle}</div>\r\n                <div className={styles.content}>\r\n                    {info.achievement?.points?.length > 0 ? (\r\n                        <ul className={styles.numbered}>\r\n                            {info.achievement?.points?.map((elem, index) => (\r\n                                <li className={styles.point} key={elem + index}>\r\n                                    {elem}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <span />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        ),\r\n        [sections.summary]: (\r\n            <div\r\n                key={'summary'}\r\n                draggable\r\n                onDragOver={() => seTarget(info.summary?.id)}\r\n                onDragEnd={() => setSource(info.summary?.id)}\r\n                className={`${styles.section} ${info.summary?.sectionTitle ? '' : styles.hidden}`}\r\n            >\r\n                <div className={styles.sectionTitle}>{info.summary?.sectionTitle}</div>\r\n                <div className={styles.content}>\r\n                    <p className={styles.overview}>{info.summary?.detail}</p>\r\n                </div>\r\n            </div>\r\n        ),\r\n        [sections.other]: (\r\n            <div\r\n                key={'other'}\r\n                draggable\r\n                onDragOver={() => seTarget(info.other?.id)}\r\n                onDragEnd={() => setSource(info.other?.id)}\r\n                className={`${styles.section} ${info.other?.sectionTitle ? '' : styles.hidden}`}\r\n            >\r\n                <div className={styles.sectionTitle}>{info.other?.sectionTitle}</div>\r\n                <div className={styles.content}>\r\n                    <p className={styles.overview}>{info?.other?.detail}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const swapSourceTarget = (source, target) => {\r\n        if (!source || !target) return;\r\n        const tempColumns = [[...columns[0]], [...columns[1]]];\r\n\r\n        let sourceRowIndex = tempColumns[0].findIndex((item) => item === source);\r\n        let sourceColumnIndex = 0;\r\n        if (sourceRowIndex < 0) {\r\n            sourceColumnIndex = 1;\r\n            sourceRowIndex = tempColumns[1].findIndex((item) => item === source);\r\n        }\r\n\r\n        let targetRowIndex = tempColumns[0].findIndex((item) => item === target);\r\n        let targetColumnIndex = 0;\r\n        if (targetRowIndex < 0) {\r\n            targetColumnIndex = 1;\r\n            targetRowIndex = tempColumns[1].findIndex((item) => item === target);\r\n        }\r\n\r\n        const tempSource = tempColumns[sourceColumnIndex][sourceRowIndex];\r\n        tempColumns[sourceColumnIndex][sourceRowIndex] = tempColumns[targetColumnIndex][targetRowIndex];\r\n\r\n        tempColumns[targetColumnIndex][targetRowIndex] = tempSource;\r\n\r\n        setColumns(tempColumns);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setColumns([\r\n            [sections.education, sections.summary],\r\n            [sections.workExp, sections.achievement, sections.other]\r\n        ]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        swapSourceTarget(source, target);\r\n    }, [source]);\r\n\r\n    useEffect(() => {\r\n        const container = containerRef.current;\r\n        if (!props.activeColor || !container) return;\r\n\r\n        container.style.setProperty('--color', props.activeColor);\r\n    }, [props.activeColor]);\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <div ref={containerRef} className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <p className={styles.heading}>{info.basicInfo?.detail?.name}</p>\r\n                    <p className={styles.subHeading}>{info.basicInfo?.detail?.title}</p>\r\n\r\n                    <div className={styles.links}>\r\n                        {info.basicInfo?.detail?.email ? (\r\n                            <a className={styles.link} href={`mailto:${info.basicInfo?.detail?.email}`}>\r\n                                <AtSign /> {info.basicInfo?.detail?.email}\r\n                            </a>\r\n                        ) : (\r\n                            <span />\r\n                        )}\r\n                        {/* {info.basicInfo?.detail?.phone ? (\r\n              <a className={styles.link}>\r\n                <Phone /> {info.basicInfo?.detail?.phone}\r\n              </a>\r\n            ) : (\r\n              <span />\r\n            )} */}\r\n                        {info.basicInfo?.detail?.linkedin ? (\r\n                            <a className={styles.link} href={info.basicInfo.detail.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Linkedin /> {info.basicInfo?.detail?.linkedin}\r\n                            </a>\r\n                        ) : (\r\n                            <span />\r\n                        )}\r\n                        {info.basicInfo?.detail?.github ? (\r\n                            <button className={styles.link}>\r\n                                <GitHub /> {info.basicInfo?.detail?.github}\r\n                            </button>\r\n                        ) : (\r\n                            <span />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.main}>\r\n                    <div className={styles.col1}>{columns[0].map((item) => sectionDiv[item])}</div>\r\n                    <div className={styles.col2}>{columns[1].map((item) => sectionDiv[item])}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Resume;\r\n","export const ques = [\r\n  \"What type of role are you interested in?\",\r\n  \"Have you worked in the technology industry before?\",\r\n  \"What are your core technical skills?\",\r\n  \"What is your leadership experience?\",\r\n  \"What programming languages are you proficient in?\",\r\n  \"What is your level of experience with Blockchain Development?\",\r\n  \"What is your preferred work location?\",\r\n  \"What is your salary expectation for this role?\",\r\n  \"Are you looking for a permanent or contract role?\",\r\n  \"When are you available to start a new role?\",\r\n  \"Do you have any experience with agile development methodologies?\",\r\n  \"What is your experience with DevOps?\",\r\n  \"What type of projects have you worked on in the past?\",\r\n  \"How do you stay up-to-date with the latest technology trends?\",\r\n  \"What is your level of experience with machine learning and artificial intelligence?\",\r\n  \"Have you worked with any specific technology platforms or frameworks?\",\r\n  \"Do you have any certifications related to technology?\",\r\n  \"Are you willing to relocate for a new role?\",\r\n  \"What is your level of experience with cloud computing?\",\r\n  \"What is your level of experience with data analytics?\",\r\n  \"What is your level of experience with cybersecurity?\",\r\n  \"What is your level of experience with mobile app development?\",\r\n  \"What is your level of experience with Cryptocurrency?\",\r\n  \"What is your current salary/daily rate/hourly rate?\",\r\n  \"What are your salary/daily rate/hourly rate expectations?\",\r\n];\r\n","import React, { createRef, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { ques } from \"./ques\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst ChatBot = ({ chatbotAnswers, setchatbotAnswers, setOpen, open, handleClose, handleOpen, ref, image }) => {\r\n  const handleInputChange = (e, que) => {\r\n    e.preventDefault();\r\n    if (e.target.value.length == 0) {\r\n      delete chatbotAnswers[que];\r\n    } else {\r\n      setchatbotAnswers({ ...chatbotAnswers, [que]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"80%\",\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n    height: \"90%\",\r\n    justifyContent: \"space-evenly\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    overflow: \"scroll\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <button style={{ marginBottom: \"10px\" }} onClick={getImage}>\r\n          Take screenshot\r\n        </button>\r\n      </div> */}\r\n      {/* <img width={\"100px\"} src={image} alt={\"Screenshot\"} />\r\n      <Button onClick={handleOpen}>Open modal</Button> */}\r\n      <Modal\r\n        open={open}\r\n        // onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {ques.map((que) => (\r\n            <TextField\r\n              sx={{ m: 1, width: \"50ch\" }}\r\n              onChange={(e) => handleInputChange(e, que)}\r\n              id=\"outlined-basic\"\r\n              label={`${que}`}\r\n              variant=\"filled\"\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              value={chatbotAnswers[que]}\r\n            />\r\n          ))}\r\n          <Button onClick={handleClose} sx={{ width: \"100px\", backgroundColor: \"rgb(94,53,177)\" }} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useRef, useState, createRef } from \"react\";\r\nimport InputControl from \"../InputControl/InputControl\";\r\nimport styles from \"./Create.module.css\";\r\nimport { X } from \"react-feather\";\r\nimport Resume from \"../Resume/Resume\";\r\nimport { contractadd, contractabi } from \"../ConnectWallet/contractinfo\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport LiveDisplay from \"../LiveDisplay/LiveDisplay\";\r\nimport ChatBot from \"./chatBot/ChatBot\";\r\nimport { create } from \"ipfs-http-client\";\r\nimport { useScreenshot } from \"use-react-screenshot\";\r\nimport { Button, List, ListItem, TextField } from \"@mui/material\";\r\nimport html2canvas from \"html2canvas\";\r\nconst Create = () => {\r\n  const [values, setValues] = useState({\r\n    // pers details\r\n    persdetName: \"\",\r\n    persdetAddress: \"\",\r\n    persdetEmail: \"\",\r\n    persdetPhone: \"\",\r\n\r\n    // work exp\r\n    jobTitle: \"\",\r\n    companyName: \"\",\r\n    companyLocation: \"\",\r\n    companystartDate: \"\",\r\n    companyendDate: \"\",\r\n    achvResp: \"\", // need to look at this one\r\n\r\n    // education\r\n    SchoolorcollegeName: \"\",\r\n    SchoolorcollegeDesc: \"\",\r\n    SchoolorcollegestartDate: \"\",\r\n    SchoolorcollegeEndDate: \"\",\r\n\r\n    // achievementsBody\r\n    hobbies: \"\", // need to look at this one\r\n\r\n    summary: \"\",\r\n\r\n    OtherkeysSkills: \"\",\r\n    personalStatement: \"\",\r\n  });\r\n  const { account, active, library } = useWeb3React();\r\n\r\n  //CODE BLOCK FOR CHATBOX///////////////////////////////////////////////////////////\r\n\r\n  const projectId = \"2Ne3Tz73itt94vQ4ZhEInyiRQz3\";\r\n  const projectSecret = \"199219aedb4bde3b5a6542fba994d4e6\";\r\n  const authorization = \"Basic \" + btoa(projectId + \":\" + projectSecret);\r\n\r\n  const ipfs = create({\r\n    url: \"https://ipfs.infura.io:5001\",\r\n    headers: {\r\n      authorization,\r\n    },\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = async () => {\r\n    try {\r\n      // const pathcv = await resultcv.path.replace(/\"|'/g, \"\");\r\n      // const urlcv = `https://raghav.infura-ipfs.io/ipfs/${pathcv}`;\r\n      // console.log(urlcv);\r\n      !active && alert(\"Connect wallet\");\r\n      \r\n      console.log({ values });\r\n      await takeScreenshot(ref1.current);\r\n      // await takeScreenshot2(liveDataRef.current);\r\n      // await getLiveDataImage()\r\n      const resultqna = await ipfs.add(image);\r\n      // const resultcv = await ipfs.add(image2);\r\n      await console.log(\"result\", resultqna);\r\n      const pathqna = await resultqna.path.replace(/\"|'/g, \"\");\r\n      const urlqna = `https://raghav.infura-ipfs.io/ipfs/${pathqna}`;\r\n      \r\n      console.log(urlqna);\r\n      setOpen(false);\r\n      \r\n      html2canvas(document.getElementById(\"livepreview\")).then(async (canvas) => {\r\n        const imgurl = canvas.toDataURL()\r\n        console.log(imgurl);\r\n        const resultresumeprev = await ipfs.add(imgurl);\r\n        const pathresumepreview = await resultresumeprev.path.replace(/\"|'/g, \"\");\r\n        const cvurl = `https://raghav.infura-ipfs.io/ipfs/${pathresumepreview}`;\r\n        console.log(cvurl, [[chatbotAnswers], urlqna]);\r\n\r\n        const signer = await library?.getSigner(account);\r\n        const cont = await new ethers.Contract(contractadd, contractabi, signer);\r\n        console.log({ cont });\r\n\r\n\r\n        console.log(cvurl, [[chatbotAnswers], urlqna]);\r\n        const createCall = await cont.inputCvDet(cvurl, [[chatbotAnswers], urlqna]);\r\n        await createCall.wait();\r\n\r\n\r\n      })\r\n\r\n      // const createCall = await cont.inputCvDet(PersDetails, Employement, Education, urlqna, [[chatbotAnswers], urlqna]);\r\n      // await createCall.wait();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getLiveDataImage = async () => {\r\n    await takeScreenshot2(liveDataRef.current);\r\n  };\r\n\r\n  const ref1 = createRef(null);\r\n  const liveDataRef = createRef(null);\r\n  const [image, takeScreenshot] = useScreenshot();\r\n  const [image2, takeScreenshot2] = useScreenshot();\r\n  const getImage = () => takeScreenshot(ref1.current);\r\n  const [chatbotAnswers, setchatbotAnswers] = useState([]);\r\n\r\n  //CODE BLOCK FOR CHATBOX///////////////////////////////////////////////////////////\r\n\r\n  const sections = {\r\n    basicInfo: \"Personal Details\",\r\n    workExp: \"Employement\",\r\n\r\n    education: \"Education\",\r\n    achievement: \"Hobbies\",\r\n    summary: \"Reference\",\r\n    other: \"Others\",\r\n  };\r\n\r\n  const [activeSectionIndex, setActiveSectionIndex] = useState(0);\r\n  const [activeSectionKey, setActiveSectionKey] = useState(Object.keys(sections)[0]);\r\n\r\n  const nextSection = () => {\r\n    let sec = activeSectionIndex + 1;\r\n    setActiveSectionKey(Object.keys(sections)[sec]);\r\n    setSectionTitle(Object.keys(sections)[sec]);\r\n    setActiveSectionIndex(sec);\r\n  };\r\n\r\n  const [sectionTitle, setSectionTitle] = useState(sections[Object.keys(sections)[0]]);\r\n\r\n  const handlePointUpdate = (value, index) => {\r\n    const tempValues = { ...values };\r\n    if (!Array.isArray(tempValues.points)) tempValues.points = [];\r\n    tempValues.points[index] = value;\r\n    setValues(tempValues);\r\n  };\r\n\r\n  const handleSubmission = async () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // forms\r\n  const basicInfoBody = (\r\n    <div className={styles.detail}>\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Name\"\r\n          placeholder=\"Enter your full\"\r\n          value={values.persdetName}\r\n          onChange={(event) => {\r\n            setValues((prev) => ({ ...prev, persdetName: event.target.value }));\r\n          }}\r\n        />\r\n        <InputControl\r\n          label=\"Address\"\r\n          value={account}\r\n          placeholder=\"\"\r\n          onChange={(event) => setValues((prev) => ({ ...prev, persdetAddress: event.target.value }))}\r\n          disabled\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Email\"\r\n          value={values.persdetEmail}\r\n          placeholder=\"Enter your email\"\r\n          onChange={(event) => setValues((prev) => ({ ...prev, persdetEmail: event.target.value }))}\r\n        />\r\n        <InputControl\r\n          label=\"Enter phone\"\r\n          value={values.persdetPhone}\r\n          placeholder=\"Enter your phone number\"\r\n          onChange={(event) => setValues((prev) => ({ ...prev, persdetPhone: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={nextSection}>\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const workExpBody = (\r\n    <div className={styles.detail}>\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Job Title\"\r\n          placeholder=\"Enter job title \"\r\n          value={values.jobTitle}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, jobTitle: event.target.value }))}\r\n        />\r\n        <InputControl\r\n          label=\"Company Name\"\r\n          placeholder=\"Enter company name\"\r\n          value={values.companyName}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, companyName: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Location\"\r\n          placeholder=\"Enter company location\"\r\n          value={values.companyLocation}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, companyLocation: event.target.value }))}\r\n        />\r\n      </div>\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Start Date\"\r\n          type=\"date\"\r\n          placeholder=\"Enter start date of work\"\r\n          value={values.companystartDate}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, companystartDate: event.target.value }))}\r\n        />\r\n        <InputControl\r\n          label=\"End Date\"\r\n          type=\"date\"\r\n          placeholder=\"Enter end date of work\"\r\n          value={values.companyendDate}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, companyendDate: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.column}>\r\n        <label>Achievements and Responsibilities</label>\r\n        <InputControl\r\n          placeholder=\"Describe your achievements and responsibilities\"\r\n          value={values.achvResp}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, achvResp: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={nextSection}>\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const educationBody = (\r\n    <div className={styles.detail}>\r\n      <div className={styles.row}>\r\n        {/* <InputControl\r\n              label=\"Description\"\r\n              value={values.title}\r\n              placeholder=\"Enter description\"\r\n              onChange={(event) =>\r\n                setValues((prev) => ({ ...prev, title: event.target.value }))\r\n              }\r\n            /> */}\r\n        <InputControl\r\n          label=\"College/School Name\"\r\n          value={values.SchoolorcollegeName}\r\n          placeholder=\"Enter college/school name\"\r\n          onChange={(event) => setValues((prev) => ({ ...prev, SchoolorcollegeName: event.target.value }))}\r\n        />\r\n      </div>\r\n      <InputControl\r\n        label=\"Description\"\r\n        value={values.SchoolorcollegeDesc}\r\n        placeholder=\"Enter description\"\r\n        onChange={(event) => setValues((prev) => ({ ...prev, SchoolorcollegeDesc: event.target.value }))}\r\n      />\r\n\r\n      {/* <InputControl\r\n            label=\"College/School Name\"\r\n            value={values.college}\r\n            placeholder=\"Enter college/school name\"\r\n            onChange={(event) =>\r\n              setValues((prev) => ({ ...prev, college: event.target.value }))\r\n            }\r\n          /> */}\r\n      <div className={styles.row}>\r\n        <InputControl\r\n          label=\"Start Date\"\r\n          type=\"date\"\r\n          placeholder=\"Enter start date of this education\"\r\n          value={values.SchoolorcollegestartDate}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, SchoolorcollegestartDate: event.target.value }))}\r\n        />\r\n        <InputControl\r\n          label=\"End Date\"\r\n          type=\"date\"\r\n          placeholder=\"Enter end date of this education\"\r\n          value={values.SchoolorcollegeEndDate}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, SchoolorcollegeEndDate: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={nextSection}>\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const achievementsBody = (\r\n    <div className={styles.detail}>\r\n      <div className={styles.column}>\r\n        <label> Your Hobbies</label>\r\n        <InputControl\r\n          placeholder=\"Enter Your Hobbies\"\r\n          value={values.hobbies}\r\n          onChange={(event) => setValues((prev) => ({ ...prev, hobbies: event.target.value }))}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={nextSection}>\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const summaryBody = (\r\n    <div className={styles.detail}>\r\n      <InputControl\r\n        label=\"Summary\"\r\n        value={values.summary}\r\n        placeholder=\"Enter your Reference\"\r\n        onChange={(event) => setValues((prev) => ({ ...prev, summary: event.target.value }))}\r\n      />\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={nextSection}>\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const otherBody = (\r\n    <div className={styles.detail}>\r\n      <InputControl\r\n        label=\"Key Skills\"\r\n        value={values.OtherkeysSkills}\r\n        placeholder=\"Enter key skills\"\r\n        onChange={(event) => setValues((prev) => ({ ...prev, OtherkeysSkills: event.target.value }))}\r\n      />\r\n      <InputControl\r\n        label=\"Personal Statement\"\r\n        value={values.personalStatement}\r\n        placeholder=\"Enter personal statement\"\r\n        onChange={(event) => setValues((prev) => ({ ...prev, personalStatement: event.target.value }))}\r\n      />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"left\" }}>\r\n        <button type=\"button\" onClick={handleSubmission}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const generateBody = () => {\r\n    switch (sections[activeSectionKey]) {\r\n      case sections.basicInfo:\r\n        return basicInfoBody;\r\n      case sections.workExp:\r\n        return workExpBody;\r\n\r\n      case sections.education:\r\n        return educationBody;\r\n      case sections.achievement:\r\n        return achievementsBody;\r\n      case sections.summary:\r\n        return summaryBody;\r\n      case sections.other:\r\n        return otherBody;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const resumeRef = useRef();\r\n\r\n  const [resumeInformation, setResumeInformation] = useState({\r\n    [sections.basicInfo]: {\r\n      id: sections.basicInfo,\r\n      sectionTitle: sections.basicInfo,\r\n      detail: {},\r\n    },\r\n    [sections.workExp]: {\r\n      id: sections.workExp,\r\n      sectionTitle: sections.workExp,\r\n      details: [],\r\n    },\r\n    // [sections.project]: {\r\n    //   id: sections.project,\r\n    //   sectionTitle: sections.project,\r\n    //   details: [],\r\n    // },\r\n    [sections.education]: {\r\n      id: sections.education,\r\n      sectionTitle: sections.education,\r\n      details: [],\r\n    },\r\n    [sections.achievement]: {\r\n      id: sections.achievement,\r\n      sectionTitle: sections.achievement,\r\n      points: [],\r\n    },\r\n    [sections.summary]: {\r\n      id: sections.summary,\r\n      sectionTitle: sections.summary,\r\n      detail: \"\",\r\n    },\r\n    [sections.other]: {\r\n      id: sections.other,\r\n      sectionTitle: sections.other,\r\n      detail: \"\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-xl-6\">\r\n            <div className={`border rounded ${styles.container}`}>\r\n              <div className={styles.header}>\r\n                {Object.keys(sections)?.map((key, index) => (\r\n                  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\r\n                  <div\r\n                    className={`${styles.section} ${activeSectionKey === key ? styles.active : \"\"}`}\r\n                    key={key}\r\n                    onClick={() => {\r\n                      setActiveSectionKey(key);\r\n                      setSectionTitle(key);\r\n                      setActiveSectionIndex(index);\r\n                    }}\r\n                  >\r\n                    {sections[key]}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className={styles.body}>\r\n                <InputControl\r\n                  label=\"Section\"\r\n                  placeholder=\"Enter section title\"\r\n                  value={sectionTitle}\r\n                  onChange={(event) => setSectionTitle(event.target.value)}\r\n                  disabled\r\n                />\r\n\r\n                {/* <div className={styles.chips}>\r\n                {activeInformation?.details\r\n                  ? activeInformation?.details?.map((item, index) => (\r\n                      <div\r\n                        className={`${styles.chip} ${\r\n                          activeDetailIndex === index ? styles.active : \"\"\r\n                        }`}\r\n                        key={item.title + index}\r\n                        onClick={() => setActiveDetailIndex(index)}\r\n                      >\r\n                        <p>\r\n                          {sections[activeSectionKey]} {index + 1}\r\n                        </p>\r\n                        <X\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n                            handleDeleteDetail(index);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))\r\n                  : \"\"}\r\n              </div> */}\r\n\r\n                {generateBody()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-xl-6\">\r\n            <ChatBot\r\n              handleClose={handleClose}\r\n              handleOpen={handleOpen}\r\n              open={open}\r\n              setOpen={setOpen}\r\n              image={image}\r\n              chatbotAnswers={chatbotAnswers}\r\n              setchatbotAnswers={setchatbotAnswers}\r\n            />\r\n            <div ref={ref1}>\r\n              <h2>Answered questions:</h2>\r\n              <List>\r\n                {Object.keys(chatbotAnswers).map((key) => (\r\n                  <ListItem>\r\n                    <TextField\r\n                      sx={{ m: 1, width: \"50ch\" }}\r\n                      id=\"outlined-basic\"\r\n                      label={`${key}`}\r\n                      variant=\"filled\"\r\n                      size=\"small\"\r\n                      value={chatbotAnswers[key]}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </div>\r\n            {/* <img width={\"100px\"} src={image2} alt={\"Screenshot\"} /> */}\r\n            <div>\r\n              <div ref={liveDataRef}  style={{background:\"white\"}}>\r\n                <LiveDisplay values={values} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Resume ref={resumeRef} sections={sections} information={resumeInformation} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"],"names":["label","props","className","styles","type","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","timeshow","getSeconds","monthplus","timeforinput","values","ref","active","account","library","useWeb3React","UserData","setUserData","useState","DataMessage","setDataMessage","exists","message","GetDisplayData","async","signer","getSigner","cont","ethers","contractadd","contractabi","displayCv","console","log","PersDetails","persdetName","toString","persdetAddress","persdetEmail","persdetPhone","personalStatement","OtherkeysSkills","hobbies","summary","Empstartdata","Empenddate","Employement","jobTitle","companyName","companyLocation","companystartDate","companyendDate","achvResp","Edustartdata","Eduenddate","Education","SchoolorcollegeName","SchoolorcollegestartDate","SchoolorcollegeEndDate","SchoolorcollegeDesc","useEffect","id","href","draggable","style","fontSize","ques","chatbotAnswers","setchatbotAnswers","setOpen","open","handleClose","handleOpen","image","Modal","Box","sx","position","top","left","transform","width","bgcolor","boxShadow","p","height","justifyContent","display","flexWrap","overflow","map","que","TextField","m","onChange","e","preventDefault","target","value","length","handleInputChange","variant","size","margin","Button","onClick","backgroundColor","setValues","authorization","btoa","projectId","ipfs","create","url","headers","React","ref1","createRef","liveDataRef","takeScreenshot","useScreenshot","image2","takeScreenshot2","sections","basicInfo","workExp","education","achievement","other","activeSectionIndex","setActiveSectionIndex","activeSectionKey","setActiveSectionKey","Object","keys","nextSection","sec","setSectionTitle","sectionTitle","basicInfoBody","InputControl","placeholder","event","prev","disabled","alignItems","workExpBody","educationBody","achievementsBody","summaryBody","otherBody","resumeInformation","setResumeInformation","useRef","detail","details","points","key","index","generateBody","alert","current","resultqna","add","urlqna","path","replace","html2canvas","document","getElementById","then","imgurl","canvas","toDataURL","resultresumeprev","cvurl","createCall","inputCvDet","wait","error","List","ListItem","background","LiveDisplay"],"sourceRoot":""}